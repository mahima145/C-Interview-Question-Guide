Difference between static and dynamic/shared libraries?

Stages of Program compilation?

Example of new and delete operator?

Difference between C,C++?

What is Association, Aggregation, Composition with example?

SOLID design principle?

-- Single Responsibility Principle = A class should have only one functionality.
-- Open Closed Principle = A class should be open for code extension but closed for modification. 
-- Liskov's Substitution Principle = Every subclass/derived class should be substitutable for their base/parent class.
-- Interface Segregation Principle = A client should never be forced to implement an interface that it doesn't use or clients shouldn't be forced to depend on methods they do not use.
-- Dependency Inversion Principle = Entities must depend on abstractions not on concretions. It states that the high level module must not depend on the low level module,
    but they should depend on abstractions.


Refer: https://scotch.io/bar-talk/s-o-l-i-d-the-first-five-principles-of-object-oriented-design

== For Design related : https://www.geeksforgeeks.org/software-engineering-coupling-and-cohesion/

Design Patterns: 
---------------------
Creational , Behavorial, Structural

Creational: 
---------------
Singleton 
Factory
Abstract Factory
Builder
Prototype

Behavorial:
------------
Chain of Responsibility : Delegates commands to a chain of processing objects.
Observer : Is a publish/subscribe pattern which allows a number of observer objects to see an event.
Strategy : Allows one of a family of algorithms to be selected on-the-fly at run-time.
Visitor: Separates an algorithm from an object structure by moving the hierarchy of methods into one object.

https://www.journaldev.com/31902/gangs-of-four-gof-design-patterns
